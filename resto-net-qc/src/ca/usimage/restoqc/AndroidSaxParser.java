
package ca.usimage.restoqc;


import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

import org.xml.sax.SAXException;
import android.sax.Element;
import android.sax.EndElementListener;
import android.sax.EndTextElementListener;
import android.sax.RootElement;
import android.util.Log;
import android.util.Xml;


public class AndroidSaxParser  implements RestoParser  {
	
	// names of the XML tags
		static final String CONTREVENANT = "SOMMR_CONDM";
		static final String PROPRIETAIRE = "Nom_exploitant";
		static final String CATEGORIE = "Type_etablissement";
		static final String ETABLISSEMENT = "Raison_sociale";
		static final String ADRESSE = "Adresse_lieu_infraction";
		static final String VILLE = "Information_etablissement";
		static final String DESCRIPTION = "Description_infraction";
		static final String DATE_INFRACTION = "Date_infraction";
		static final String DATE_JUGEMENT = "Date_jugement";
		static final String DATE_PUBLICATION = "Date_publication";
		static final String MONTANT = "Amende";
		

	static final String CONTREVENANTS = "NewDataSet";
	public AndroidSaxParser() {
		
		
		 
	}
	public List<Entry> parse() {
		final Entry currentEntry = new Entry();
		RootElement root = new RootElement(CONTREVENANTS);
		final List<Entry> entries = new ArrayList<Entry>();
		
		Element contrevenant = root.getChild(CONTREVENANT);
		contrevenant.setEndElementListener(new EndElementListener(){
			public void end() {
				entries.add(currentEntry.copy());
			}
		});
		Element propr = contrevenant.getChild(PROPRIETAIRE);
		
		propr.setEndTextElementListener(new EndTextElementListener(){
			public void end(String body) {
				
				currentEntry.setProprietaire(body);
				// the following line is used to set raison sociale to the owner name whenever raison sociale is missing
				currentEntry.setEtablissement(body);
			}
		});
		
		Element raison = contrevenant.getChild(ETABLISSEMENT);
		
		
		raison.setEndTextElementListener(new EndTextElementListener(){
			public void end(String body) {
				
				Log.e("etablissement= ", body);
				currentEntry.setEtablissement(body);
			}
		
		});
	
		contrevenant.getChild(DESCRIPTION).setEndTextElementListener(new EndTextElementListener(){
			public void end(String body) {
				currentEntry.setDescription(body);
			}
		});
		contrevenant.getChild(ADRESSE).setEndTextElementListener(new EndTextElementListener(){
			public void end(String body) {
				currentEntry.setAdresse(body);
			}
		});
		contrevenant.getChild(CATEGORIE).setEndTextElementListener(new EndTextElementListener(){
			public void end(String body) {
				currentEntry.setCategorie(body);
			}
		});

		contrevenant.getChild(VILLE).setEndTextElementListener(new EndTextElementListener(){
			public void end(String body) {
				currentEntry.setVille(body);
			}
		});
		
		contrevenant.getChild(DATE_INFRACTION).setEndTextElementListener(new EndTextElementListener(){
			public void end(String body) {
				currentEntry.setDate_infraction(body);
			}
		});
		contrevenant.getChild(DATE_JUGEMENT).setEndTextElementListener(new EndTextElementListener(){
			public void end(String body) {
				currentEntry.setDate_jugement(body);
			}
		});
		contrevenant.getChild(DATE_PUBLICATION).setEndTextElementListener(new EndTextElementListener(){
			public void end(String body) {
				currentEntry.setDate_jugement(body);
			}
		});
		contrevenant.getChild(MONTANT).setEndTextElementListener(new EndTextElementListener(){
			public void end(String body) {
				currentEntry.setMontant(body);
			}
		});

		try {
		    
			InputStream is = App.getContext().getAssets().open("ListeCondamnation.xml");
		Xml.parse(is,  Xml.Encoding.UTF_8, root.getContentHandler());
		} catch (SAXException spe) {
			   // Error generated by the parser
			   System.out.println ("\n** Parsing error" 
			      + ", line " + spe.getException ());
	//		      + ", uri " + spe.getSystemId ());
			   System.out.println("   " + spe.getMessage() );

		} 
		catch (Exception e) {
	Log.e("Parse exception", e.getMessage());
		}
		return entries;
	}


}

